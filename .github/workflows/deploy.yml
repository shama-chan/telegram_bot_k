name: Build & Deploy bot
on:
  push: { branches: [ "main" ] }
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:sha-${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Подключаем job к твоему tailnet
      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TS_AUTHKEY }}

      # Деплой по SSH через Tailscale-адрес
      - name: Deploy via SSH over Tailscale
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}     # 100.x.x.x
          username: ${{ secrets.SSH_USER }} # ubuntu (или твой)
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd ~/bot_tg/bot.py   # <- ПУТЬ К ТВОЕМУ docker-compose.yml на ВМ
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

            # Пропишем иммутабельный тег текущего коммита
            if grep -q '^ *image:' docker-compose.yml; then
              sed -i 's#^ *image:.*#  image: ghcr.io/${{ github.repository }}:sha-${{ github.sha }}#' docker-compose.yml
            else
              # Если у тебя до этого был build:, принудительно добавим image:
              sed -i 's#^\(\s*tg-bot:\)#\1\n    image: ghcr.io/${{ github.repository }}:sha-${{ github.sha }}#' docker-compose.yml || true
            fi

            # .env должен уже лежать рядом и НЕ в гите
            test -f .env || (echo "BOT_TOKEN=PUT_NEW_TOKEN_HERE" > .env)

            docker compose pull
            docker compose up -d
            docker image prune -f

      - name: Show status
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/bot_tg/bot.py
            docker compose ps
            docker compose logs --since 2m --no-color | tail -n 200
